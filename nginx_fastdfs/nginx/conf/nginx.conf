user  root;
worker_processes  2;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    
    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 10m;

    # 定义统一后端服务（关键优化点）
    upstream backend_server {
        # 使用 Docker 服务名代替 IP（需与 compose 中的服务名对应）
        server 172.30.0.4:8081;
        # 若需负载均衡可添加多个 server
        # server tc_server_replica:8081;
    }

    server {
        listen       80;
        server_name  localhost;
        root         /tc/tc-front;

        # 跨域配置（保持原样）
        add_header Access-Control-Allow-Methods *;
        add_header Access-Control-Max-Age 3600;
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Headers $http_access_control_request_headers;

        location / {
            index  index.html;
            try_files $uri $uri/ /index.html;
        }

        # FastDFS 路由配置（保持原样）
        location ~/group([0-9])/M([0-9])([0-9]) {     
            ngx_fastdfs_module;
        }

        location /api/login{
            proxy_pass http://backend_server;
        }
        location /api/reg{
            proxy_pass http://backend_server;
        }
        location /api2/upload{
            proxy_pass http://backend_server;
        }
        location /api/md5{
            proxy_pass http://backend_server;
        }
        location /api/myfiles{
            proxy_pass http://backend_server;
        }
        location /api/dealfile{
            proxy_pass http://backend_server;
        }
        location /api/sharefiles{   
            proxy_pass http://backend_server;
        }
        location /api/dealsharefile{
            proxy_pass http://backend_server;
        }
        location /api/sharepic{
            proxy_pass http://backend_server;
        }
        #error_page  404 
        # /404.html;
        # redirect server error pages to the static page /50x.html
        #
        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root   html;
        # }

        # 文件上传处理（保持原样）
        location /api/upload {
            upload_pass   @api_upload; #文件上传完成后，将请求转发到名为 @api_upload 的 Nginx 内部位置（通常由后端服务处理）。
            upload_store /root/tmp 1; #upload_store：上传的文件临时存储路径：/root/tmp。 1 表示目录层级深度（此处为一级目录，文件直接存储在 /root/tmp 下）。
            upload_store_access user:rw;
            upload_set_form_field "${upload_field_name}_name" $upload_file_name;
            upload_set_form_field "${upload_field_name}_content_type" $upload_content_type;
            upload_set_form_field "${upload_field_name}_path" $upload_tmp_path;
            upload_aggregate_form_field "${upload_field_name}_md5" $upload_file_md5;
            upload_aggregate_form_field "${upload_field_name}_size" $upload_file_size;
            upload_pass_form_field "^user";
        }

        location @api_upload {
            proxy_pass http://backend_server;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
